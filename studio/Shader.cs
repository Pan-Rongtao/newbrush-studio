// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Shader.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NBPlayer {

  /// <summary>Holder for reflection information generated from Shader.proto</summary>
  public static partial class ShaderReflection {

    #region Descriptor
    /// <summary>File descriptor for Shader.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxTaGFkZXIucHJvdG8SCE5CUGxheWVyIj4KEkJ1aWxkU2hhZGVyUmVxdWVz",
            "dBITCgt2U2hhZGVyQ29kZRgBIAEoCRITCgtmU2hhZGVyQ29kZRgCIAEoCSLH",
            "AwoQQnVpbGRTaGFkZXJSZXBseRI6Cgh2YXJJbmZvcxgBIAMoCzIoLk5CUGxh",
            "eWVyLkJ1aWxkU2hhZGVyUmVwbHkuVmFySW5mb3NFbnRyeRpZCg1WYXJJbmZv",
            "c0VudHJ5EgsKA2tleRgBIAEoCRI3CgV2YWx1ZRgCIAEoDjIoLk5CUGxheWVy",
            "LkJ1aWxkU2hhZGVyUmVwbHkuU2hhZGVyVmFyVHlwZToCOAEimwIKDVNoYWRl",
            "clZhclR5cGUSCwoHdW5rbm93bhAAEgsKB2Jvb2xlYW4QARILCgdpbnRlZ2Vy",
            "EAISCAoEcmVhbBADEggKBHZlYzIQBBIICgR2ZWMzEAUSCAoEdmVjNBAGEgkK",
            "BWl2ZWMyEAcSCQoFaXZlYzMQCBIJCgVpdmVjNBAJEgkKBWJ2ZWMyEAoSCQoF",
            "YnZlYzMQCxIJCgVidmVjNBAMEgoKBm1hdDJ4MhANEgoKBm1hdDJ4MxAOEgoK",
            "Bm1hdDJ4NBAPEgoKBm1hdDN4MhAQEgoKBm1hdDN4MxAREgoKBm1hdDN4NBAS",
            "EgoKBm1hdDR4MhATEgoKBm1hdDR4MxAUEgoKBm1hdDR4NBAVEg0KCXN0cnVj",
            "dHVyZRAWMlMKBlNoYWRlchJJCgtCdWlsZFNoYWRlchIcLk5CUGxheWVyLkJ1",
            "aWxkU2hhZGVyUmVxdWVzdBoaLk5CUGxheWVyLkJ1aWxkU2hhZGVyUmVwbHki",
            "AGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NBPlayer.BuildShaderRequest), global::NBPlayer.BuildShaderRequest.Parser, new[]{ "VShaderCode", "FShaderCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NBPlayer.BuildShaderReply), global::NBPlayer.BuildShaderReply.Parser, new[]{ "VarInfos" }, null, new[]{ typeof(global::NBPlayer.BuildShaderReply.Types.ShaderVarType) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BuildShaderRequest : pb::IMessage<BuildShaderRequest> {
    private static readonly pb::MessageParser<BuildShaderRequest> _parser = new pb::MessageParser<BuildShaderRequest>(() => new BuildShaderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildShaderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NBPlayer.ShaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderRequest(BuildShaderRequest other) : this() {
      vShaderCode_ = other.vShaderCode_;
      fShaderCode_ = other.fShaderCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderRequest Clone() {
      return new BuildShaderRequest(this);
    }

    /// <summary>Field number for the "vShaderCode" field.</summary>
    public const int VShaderCodeFieldNumber = 1;
    private string vShaderCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VShaderCode {
      get { return vShaderCode_; }
      set {
        vShaderCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fShaderCode" field.</summary>
    public const int FShaderCodeFieldNumber = 2;
    private string fShaderCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FShaderCode {
      get { return fShaderCode_; }
      set {
        fShaderCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildShaderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildShaderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VShaderCode != other.VShaderCode) return false;
      if (FShaderCode != other.FShaderCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VShaderCode.Length != 0) hash ^= VShaderCode.GetHashCode();
      if (FShaderCode.Length != 0) hash ^= FShaderCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VShaderCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VShaderCode);
      }
      if (FShaderCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FShaderCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VShaderCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VShaderCode);
      }
      if (FShaderCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FShaderCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildShaderRequest other) {
      if (other == null) {
        return;
      }
      if (other.VShaderCode.Length != 0) {
        VShaderCode = other.VShaderCode;
      }
      if (other.FShaderCode.Length != 0) {
        FShaderCode = other.FShaderCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VShaderCode = input.ReadString();
            break;
          }
          case 18: {
            FShaderCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuildShaderReply : pb::IMessage<BuildShaderReply> {
    private static readonly pb::MessageParser<BuildShaderReply> _parser = new pb::MessageParser<BuildShaderReply>(() => new BuildShaderReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildShaderReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NBPlayer.ShaderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderReply(BuildShaderReply other) : this() {
      varInfos_ = other.varInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShaderReply Clone() {
      return new BuildShaderReply(this);
    }

    /// <summary>Field number for the "varInfos" field.</summary>
    public const int VarInfosFieldNumber = 1;
    private static readonly pbc::MapField<string, global::NBPlayer.BuildShaderReply.Types.ShaderVarType>.Codec _map_varInfos_codec
        = new pbc::MapField<string, global::NBPlayer.BuildShaderReply.Types.ShaderVarType>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::NBPlayer.BuildShaderReply.Types.ShaderVarType) x, global::NBPlayer.BuildShaderReply.Types.ShaderVarType.Unknown), 10);
    private readonly pbc::MapField<string, global::NBPlayer.BuildShaderReply.Types.ShaderVarType> varInfos_ = new pbc::MapField<string, global::NBPlayer.BuildShaderReply.Types.ShaderVarType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::NBPlayer.BuildShaderReply.Types.ShaderVarType> VarInfos {
      get { return varInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildShaderReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildShaderReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!VarInfos.Equals(other.VarInfos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= VarInfos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      varInfos_.WriteTo(output, _map_varInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += varInfos_.CalculateSize(_map_varInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildShaderReply other) {
      if (other == null) {
        return;
      }
      varInfos_.Add(other.varInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            varInfos_.AddEntriesFrom(input, _map_varInfos_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuildShaderReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ShaderVarType {
        [pbr::OriginalName("unknown")] Unknown = 0,
        [pbr::OriginalName("boolean")] Boolean = 1,
        [pbr::OriginalName("integer")] Integer = 2,
        [pbr::OriginalName("real")] Real = 3,
        [pbr::OriginalName("vec2")] Vec2 = 4,
        [pbr::OriginalName("vec3")] Vec3 = 5,
        [pbr::OriginalName("vec4")] Vec4 = 6,
        [pbr::OriginalName("ivec2")] Ivec2 = 7,
        [pbr::OriginalName("ivec3")] Ivec3 = 8,
        [pbr::OriginalName("ivec4")] Ivec4 = 9,
        [pbr::OriginalName("bvec2")] Bvec2 = 10,
        [pbr::OriginalName("bvec3")] Bvec3 = 11,
        [pbr::OriginalName("bvec4")] Bvec4 = 12,
        [pbr::OriginalName("mat2x2")] Mat2X2 = 13,
        [pbr::OriginalName("mat2x3")] Mat2X3 = 14,
        [pbr::OriginalName("mat2x4")] Mat2X4 = 15,
        [pbr::OriginalName("mat3x2")] Mat3X2 = 16,
        [pbr::OriginalName("mat3x3")] Mat3X3 = 17,
        [pbr::OriginalName("mat3x4")] Mat3X4 = 18,
        [pbr::OriginalName("mat4x2")] Mat4X2 = 19,
        [pbr::OriginalName("mat4x3")] Mat4X3 = 20,
        [pbr::OriginalName("mat4x4")] Mat4X4 = 21,
        [pbr::OriginalName("structure")] Structure = 22,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
