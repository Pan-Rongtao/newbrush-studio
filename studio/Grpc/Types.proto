syntax = "proto3";
package nbrpc;

//	bool		布尔类型 							bool
//	double		64位浮点数							double
//	float		32为浮点数							float
//	int32		32位整数							int
//	uin32		32位无符号整数						unsigned int
//	int64		64位整数							__int64
//	uint64		64位无符号整						unsigned __int64
//	sint32		32位整数，处理负数效率更高			int32
//	sing64		64位整数，处理负数效率更高			__int64
//	fixed32		32位无符号整数						unsigned int32
//	fixed64 	64位无符号整数						unsigned __int64
//	sfixed32 	32位整数、能以更高的效率处理负数	unsigned int32
//	sfixed64	64位整数							unsigned __int64
//	string 		只能处理 ASCII字符					std::string
//	bytes 		用于处理多字节的语言字符、如中文	std::string
//	enum 		可以包含一个用户自定义的枚举类型	enum(uint32)
//	message 	可以包含一个用户自定义的消息类型	object of class


enum UniformType
{
	unknown = 0;
	boolean = 1;
	integer = 2;
	real = 3;
	vec2 = 4;
	vec3 = 5;
	vec4 = 6;
	ivec2 = 7;
	ivec3 = 8;
	ivec4 = 9;
	bvec2 = 10;
	bvec3 = 11;
	bvec4 = 12;
	mat2x2 = 13;
	mat2x3 = 14;
	mat2x4 = 15;
	mat3x2 = 16;
	mat3x3 = 17;
	mat3x4 = 18;
	mat4x2 = 19;
	mat4x3 = 20;
	mat4x4 = 21;
	structure = 22;
}

message Vec2
{
	float x = 1;
	float y = 2;
}

message Vec3
{
	float x = 1;
	float y = 2;
	float z = 3;
}

message Vec4
{
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
}

message Mat3x3
{
	repeated float data = 1;
};

message Mat4x4
{
	repeated float data = 1;
};

message Color
{
	int32 r = 1;
	int32 g = 2;
	int32 b = 3;
	int32 a = 4;
}

message DateTime
{
	int32 year = 1;
	int32 month = 2;
	int32 day = 3;
	int32 hour = 4;
	int32 minute = 5;
	int32 second = 6;
	int32 millisecond = 7;
	int32 microsecond = 8;
}

message TimeSpan
{
	int64 micros = 1;
}

message Thickness
{
	float left = 1;
	float top = 2;
	float right = 3;
	float bottom = 4;
}

message CommonRequest
{
}
message CommonReply
{
	bool success = 1;
	string msg = 2;
}