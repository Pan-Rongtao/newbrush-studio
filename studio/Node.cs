// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Node.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nbrpc {

  /// <summary>Holder for reflection information generated from Node.proto</summary>
  public static partial class NodeReflection {

    #region Descriptor
    /// <summary>File descriptor for Node.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpOb2RlLnByb3RvEgVuYnJwYxoLVHlwZXMucHJvdG8aCk1hdGgucHJvdG8i",
            "RAoOQWRkTm9kZVJlcXVlc3QSDAoEcGF0aBgBIAEoCRIRCgljaGlsZFR5cGUY",
            "AiABKAkSEQoJY2hpbGROYW1lGAMgASgJIjQKEVJlbW92ZU5vZGVSZXF1ZXN0",
            "EgwKBHBhdGgYASABKAkSEQoJY2hpbGROYW1lGAIgASgJIk0KEVJlbmFtZU5v",
            "ZGVSZXF1ZXN0EgwKBHBhdGgYASABKAkSFAoMY2hpbGRPbGROYW1lGAIgASgJ",
            "EhQKDGNoaWxkTmV3TmFtZRgDIAEoCTK9AQoHTm9kZVJwYxI2CgdBZGROb2Rl",
            "EhUubmJycGMuQWRkTm9kZVJlcXVlc3QaEi5uYnJwYy5Db21tb25SZXBseSIA",
            "EjwKClJlbW92ZU5vZGUSGC5uYnJwYy5SZW1vdmVOb2RlUmVxdWVzdBoSLm5i",
            "cnBjLkNvbW1vblJlcGx5IgASPAoKUmVuYW1lTm9kZRIYLm5icnBjLlJlbmFt",
            "ZU5vZGVSZXF1ZXN0GhIubmJycGMuQ29tbW9uUmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Nbrpc.TypesReflection.Descriptor, global::Nbrpc.MathReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nbrpc.AddNodeRequest), global::Nbrpc.AddNodeRequest.Parser, new[]{ "Path", "ChildType", "ChildName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nbrpc.RemoveNodeRequest), global::Nbrpc.RemoveNodeRequest.Parser, new[]{ "Path", "ChildName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nbrpc.RenameNodeRequest), global::Nbrpc.RenameNodeRequest.Parser, new[]{ "Path", "ChildOldName", "ChildNewName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AddNodeRequest : pb::IMessage<AddNodeRequest> {
    private static readonly pb::MessageParser<AddNodeRequest> _parser = new pb::MessageParser<AddNodeRequest>(() => new AddNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nbrpc.NodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNodeRequest(AddNodeRequest other) : this() {
      path_ = other.path_;
      childType_ = other.childType_;
      childName_ = other.childName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNodeRequest Clone() {
      return new AddNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "childType" field.</summary>
    public const int ChildTypeFieldNumber = 2;
    private string childType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildType {
      get { return childType_; }
      set {
        childType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "childName" field.</summary>
    public const int ChildNameFieldNumber = 3;
    private string childName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildName {
      get { return childName_; }
      set {
        childName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ChildType != other.ChildType) return false;
      if (ChildName != other.ChildName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ChildType.Length != 0) hash ^= ChildType.GetHashCode();
      if (ChildName.Length != 0) hash ^= ChildName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ChildType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildType);
      }
      if (ChildName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChildName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ChildType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildType);
      }
      if (ChildName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ChildType.Length != 0) {
        ChildType = other.ChildType;
      }
      if (other.ChildName.Length != 0) {
        ChildName = other.ChildName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            ChildType = input.ReadString();
            break;
          }
          case 26: {
            ChildName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveNodeRequest : pb::IMessage<RemoveNodeRequest> {
    private static readonly pb::MessageParser<RemoveNodeRequest> _parser = new pb::MessageParser<RemoveNodeRequest>(() => new RemoveNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nbrpc.NodeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNodeRequest(RemoveNodeRequest other) : this() {
      path_ = other.path_;
      childName_ = other.childName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNodeRequest Clone() {
      return new RemoveNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "childName" field.</summary>
    public const int ChildNameFieldNumber = 2;
    private string childName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildName {
      get { return childName_; }
      set {
        childName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ChildName != other.ChildName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ChildName.Length != 0) hash ^= ChildName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ChildName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ChildName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ChildName.Length != 0) {
        ChildName = other.ChildName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            ChildName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RenameNodeRequest : pb::IMessage<RenameNodeRequest> {
    private static readonly pb::MessageParser<RenameNodeRequest> _parser = new pb::MessageParser<RenameNodeRequest>(() => new RenameNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RenameNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nbrpc.NodeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameNodeRequest(RenameNodeRequest other) : this() {
      path_ = other.path_;
      childOldName_ = other.childOldName_;
      childNewName_ = other.childNewName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameNodeRequest Clone() {
      return new RenameNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "childOldName" field.</summary>
    public const int ChildOldNameFieldNumber = 2;
    private string childOldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildOldName {
      get { return childOldName_; }
      set {
        childOldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "childNewName" field.</summary>
    public const int ChildNewNameFieldNumber = 3;
    private string childNewName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildNewName {
      get { return childNewName_; }
      set {
        childNewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RenameNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RenameNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ChildOldName != other.ChildOldName) return false;
      if (ChildNewName != other.ChildNewName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ChildOldName.Length != 0) hash ^= ChildOldName.GetHashCode();
      if (ChildNewName.Length != 0) hash ^= ChildNewName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ChildOldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildOldName);
      }
      if (ChildNewName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChildNewName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ChildOldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildOldName);
      }
      if (ChildNewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildNewName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RenameNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ChildOldName.Length != 0) {
        ChildOldName = other.ChildOldName;
      }
      if (other.ChildNewName.Length != 0) {
        ChildNewName = other.ChildNewName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            ChildOldName = input.ReadString();
            break;
          }
          case 26: {
            ChildNewName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
