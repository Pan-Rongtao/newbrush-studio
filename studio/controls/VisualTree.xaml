<UserControl x:Class="studio.VisualTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:studio"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <!--解决遍历时无法深层次遍历的问题：https://www.cnblogs.com/sayo/archive/2008/07/23/1249804.html-->
    <UserControl.Resources>
        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}" />
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StretchTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True" SourceName="Bd" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <!--visual-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <local:SearchBox Margin="0"/>

        <TreeView x:Name="tv" Grid.Row="1" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" TreeViewItem.Selected="treeView1_Selected"
                  Background="Transparent" ItemContainerStyle="{StaticResource StretchTreeViewItemStyle}" Margin="3,5,3,2" >
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" Margin="0, 2, 0, 2" VerticalAlignment="Center">
                            <materialDesign:PackIcon Kind="{Binding IconType}" Margin="1, 0, 3, 0" VerticalAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" HorizontalAlignment="Right"/>
                        </StackPanel>
                        <ToggleButton x:Name="tb" Grid.Column="1" IsChecked="{Binding Visibility}" Focusable="False">
                            <ToggleButton.Resources>
                                <local:VisibilityIconConverter x:Key="vPConverter"/>
                            </ToggleButton.Resources>
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Rectangle Fill="Transparent"/>
                                        <materialDesign:PackIcon Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="{Binding IsChecked, ElementName=tb, Converter={StaticResource vPConverter}}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>


            <TreeView.ContextMenu>
                <ContextMenu >
                    <MenuItem x:Name="AddGroupMenuItem" Header="添加" InputGestureText="Ctrl+N">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="AddCircleOutline" />
                        </MenuItem.Icon>
                        <!--
                        <MenuItem x:Name="createGrid" Header="Grid" Click="createGrid_Click">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Margin="5,0,0,0" Kind="Grid" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="createRectangle" Header="Rectangle" Click="createRectangle_Click">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Margin="5,0,0,0" Kind="Rectangle" />
                            </MenuItem.Icon>
                        </MenuItem>-->
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="重命名" InputGestureText="F2">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="RenameBox" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="复制" InputGestureText="Ctrl+C">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="ContentCopy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="剪切" InputGestureText="Ctrl+X">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="Scissors" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="粘贴" InputGestureText="Ctrl+V">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="ContentPaste" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="删除" InputGestureText="Del">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="DeleteForeverOutline" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="展开/收起" InputGestureText="Ctrl+G">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Margin="5,0,0,0" Kind="ExpandVertical" />
                        </MenuItem.Icon>
                    </MenuItem>

                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>

    </Grid>
    
</UserControl>
